---
// Datos de ejemplo para la galería
const galleryItems = [
  {
    id: 1,
    title: "Retrato - Mujer Llorando",
    category: "Retrato",
    image: "https://drive.google.com/thumbnail?id=1y_dS5t86-RxcItbQYpOOgbN-9Y4_OXqh&sz=w1000",
    thumbnail: "https://drive.google.com/thumbnail?id=1y_dS5t86-RxcItbQYpOOgbN-9Y4_OXqh&sz=w1000"
  },
  {
    id: 2,
    title: "Galería de Proyectos - Vista Previa",
    category: "Audiovisual",
    image: "https://drive.google.com/thumbnail?id=1iHLRjnlJLO9T3PRrTKLKqcIg56SUw7Rt&sz=w1000",
    thumbnail: "https://drive.google.com/thumbnail?id=1iHLRjnlJLO9T3PRrTKLKqcIg56SUw7Rt&sz=w1000"
  },
  {
    id: 3,
    title: "Proyecto Audiovisual - Imagen 3",
    category: "Audiovisual",
    image: "https://drive.google.com/thumbnail?id=1MZdaVIU_skQ9nAIDALR4PnOrFJQBNIvT&sz=w1000",
    thumbnail: "https://drive.google.com/thumbnail?id=1MZdaVIU_skQ9nAIDALR4PnOrFJQBNIvT&sz=w1000"
  }
];

// Categorías únicas
const categories = [...new Set(galleryItems.map(item => item.category))];
---

<section id="gallery" class="py-20 bg-gradient-to-br from-gray-50 to-white">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="text-center mb-16">
      <h2 class="text-5xl font-bold text-gray-900 mb-6 tracking-tight">Galería de Trabajos</h2>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
        Una muestra de mis proyectos más destacados en diferentes géneros audiovisuales
      </p>
    </div>
    
    <!-- Filtros de categorías -->
    <div class="flex flex-wrap justify-center gap-4 mb-16">
      <button 
        class="filter-btn active px-8 py-3 rounded-full bg-gray-900 text-white font-semibold transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105"
        data-category="all"
      >
        Todos
      </button>
      {categories.map((category) => (
        <button 
          class="filter-btn px-8 py-3 rounded-full bg-white text-gray-700 font-semibold hover:bg-gray-900 hover:text-white transition-all duration-300 shadow-md hover:shadow-xl transform hover:scale-105"
          data-category={category.toLowerCase()}
        >
          {category}
        </button>
      ))}
    </div>
    
    <!-- Grid de galería -->
    <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8" id="gallery-grid">
      {galleryItems.map((item) => (
        <div class="gallery-item group" data-category={item.category.toLowerCase()}>
          <div class="relative overflow-hidden rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:scale-105 bg-white cursor-pointer gallery-card" data-image={item.image} data-title={item.title}>
            <!-- Imagen con lazy loading -->
            <div class="aspect-[4/3] bg-gradient-to-br from-gray-100 to-gray-200 relative overflow-hidden">
              <img 
                src={item.image}
                alt={item.title}
                class="w-full h-full object-cover transition-all duration-700 group-hover:scale-110"
                loading="lazy"
                onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
              />
              <!-- Placeholder mientras carga -->
              <div class="absolute inset-0 flex items-center justify-center bg-gradient-to-br from-gray-100 to-gray-200" style="display: none;">
                <div class="text-center space-y-4">
                  <div class="w-16 h-16 bg-gray-300 rounded-full flex items-center justify-center mx-auto">
                    <i class="fas fa-image text-2xl text-gray-500"></i>
                  </div>
                  <div class="space-y-2">
                    <p class="text-gray-600 font-medium text-sm">{item.title}</p>
                    <p class="text-xs text-gray-400 bg-gray-200 px-3 py-1 rounded-full inline-block">{item.category}</p>
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Overlay con información -->
            <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500 flex items-end">
              <div class="p-6 text-white w-full">
                <div class="space-y-2">
                  <h3 class="font-bold text-lg leading-tight">{item.title}</h3>
                  <p class="text-sm opacity-90 bg-white/20 px-3 py-1 rounded-full inline-block">{item.category}</p>
                </div>
                <div class="mt-4 flex items-center justify-between">
                  <div class="flex items-center space-x-2">
                    <i class="fas fa-eye text-sm opacity-75"></i>
                    <span class="text-sm opacity-75">Ver detalle</span>
                  </div>
                  <div class="w-10 h-10 bg-white/20 rounded-full flex items-center justify-center backdrop-blur-sm">
                    <i class="fas fa-expand-alt text-sm"></i>
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Badge de categoría -->
            <div class="absolute top-4 left-4">
              <span class="px-3 py-1 bg-white/90 backdrop-blur-sm text-gray-800 text-xs font-semibold rounded-full shadow-sm">
                {item.category}
              </span>
            </div>
          </div>
        </div>
      ))}
    </div>
    
    <!-- CTA -->
    <div class="text-center mt-20">
      <p class="text-gray-600 mb-8 text-lg">
        ¿Te gusta lo que ves? Cada proyecto es una historia única esperando ser contada.
      </p>
      <a 
        href="#contact" 
        class="inline-flex items-center gap-3 bg-gray-900 text-white px-10 py-4 rounded-xl font-semibold hover:bg-gray-800 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105"
      >
        <i class="fas fa-play"></i>
        Ver Más Trabajos
      </a>
    </div>
  </div>
</section>

<!-- Modal para ver imágenes -->
<div id="image-modal" class="fixed inset-0 bg-black bg-opacity-90 z-50 hidden">
  <div class="absolute inset-0 flex items-center justify-center p-4">
    <div class="relative w-full max-w-4xl">
      <!-- Botón cerrar -->
      <button 
        id="close-image-modal"
        class="absolute -top-12 right-0 text-white text-2xl hover:text-gray-300 transition-colors"
      >
        <i class="fas fa-times"></i>
      </button>
      
      <!-- Contenedor de la imagen -->
      <div class="bg-white rounded-lg overflow-hidden shadow-2xl">
        <img 
          id="modal-image"
          class="w-full h-auto max-h-[80vh] object-contain"
          alt="Imagen de la galería"
        />
        <div class="p-6 bg-white">
          <h3 id="modal-title" class="text-xl font-bold text-gray-900"></h3>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Filtrado de galería
  const filterButtons = document.querySelectorAll('.filter-btn');
  const galleryItems = document.querySelectorAll('.gallery-item');
  
  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      const category = button.getAttribute('data-category');
      
      // Actualizar botones activos
      filterButtons.forEach(btn => {
        btn.classList.remove('active', 'bg-gray-900', 'text-white');
        btn.classList.add('bg-white', 'text-gray-700');
      });
      button.classList.add('active', 'bg-gray-900', 'text-white');
      button.classList.remove('bg-white', 'text-gray-700');
      
      // Filtrar elementos con animación
      galleryItems.forEach(item => {
        if (category === 'all' || item.getAttribute('data-category') === category) {
          item.style.display = 'block';
          setTimeout(() => {
            item.style.opacity = '1';
            item.style.transform = 'translateY(0)';
          }, 50);
        } else {
          item.style.opacity = '0';
          item.style.transform = 'translateY(20px)';
          setTimeout(() => {
            item.style.display = 'none';
          }, 300);
        }
      });
    });
  });

  // Modal para ver imágenes
  const imageModal = document.getElementById('image-modal');
  const modalImage = document.getElementById('modal-image');
  const modalTitle = document.getElementById('modal-title');
  const closeImageModal = document.getElementById('close-image-modal');
  const galleryCards = document.querySelectorAll('.gallery-card');
  
  // Abrir modal
  galleryCards.forEach(card => {
    card.addEventListener('click', () => {
      const imageSrc = card.getAttribute('data-image');
      const title = card.getAttribute('data-title');
      
      if (modalImage && modalTitle) {
        modalImage.src = imageSrc;
        modalTitle.textContent = title;
      }
      
      if (imageModal) {
        imageModal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
      }
    });
  });
  
  // Cerrar modal
  if (closeImageModal) {
    closeImageModal.addEventListener('click', () => {
      if (imageModal) {
        imageModal.classList.add('hidden');
        document.body.style.overflow = 'auto';
      }
    });
  }
  
  // Cerrar modal con Escape
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && imageModal && !imageModal.classList.contains('hidden')) {
      imageModal.classList.add('hidden');
      document.body.style.overflow = 'auto';
    }
  });
  
  // Cerrar modal haciendo clic fuera de la imagen
  if (imageModal) {
    imageModal.addEventListener('click', (e) => {
      if (e.target === imageModal) {
        imageModal.classList.add('hidden');
        document.body.style.overflow = 'auto';
      }
    });
  }
</script> 